@model SpotifyDecisionHelper.DB.Models.Match

@{
    ViewData["Title"] = "Home Page";
}

<div style="display: flex; flex-direction: column; align-items: center; justify-content: space-around;" class="text-center">
    @if ((bool)(ViewData["MatchSent"] ?? false))
    {
        var arr = Model.Tracks.ToArray();
        var track1 = arr[0];
        var track2 = arr[1];
        <div style="display: flex; flex-direction: row;" width="100%" height="250px">
            <iframe style="border-radius:12px"
                    src="https://open.spotify.com/embed/track/@Html.Raw(track1.TrackId)"
                    width="600px" height="250px" allowfullscreen=""
                    allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy">
            </iframe>
            <p style="line-height:200px; font-size:250px; top:0">@Html.Raw(track1.Rating)</p>
        </div>
        @Html.ActionLink(
            "Choose", 
            "Choice",
            new { matchId = Model.MatchId, choice = 1},
          new { @class = "btn btn-primary" })
        <h1>vs</h1>
        @Html.ActionLink(
            "Choose", 
            "Choice",
            new { matchId = Model.MatchId, choice = 2}, 
            new { @style = "margin-bottom: 20px", @class = "btn btn-primary" })
        <div style="display: flex; flex-direction: row;" width="50%" height="250px">
            <iframe style="border-radius:12px"
                    src="https://open.spotify.com/embed/track/@Html.Raw(track2.TrackId)"
                    width="600px" height="250px" allowfullscreen=""
                    allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy">
            </iframe>
            <p style="line-height:200px; font-size:250px; top:0">@Html.Raw(track2.Rating)</p>
        </div>
    }
    else
    {
        <h3>Match not found</h3>
    }
</div>